"""users, activcation tokens, transactions, categories, recurring transactions tables created

Revision ID: d1ad4d5af38f
Revises: 
Create Date: 2024-10-20 17:56:33.938976

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd1ad4d5af38f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type_', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=512), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('roles', sa.String(length=15), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='1', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('activation_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('timestamp', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('percentage', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('income_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recurring_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', name='frequency'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('next_due_date', sa.Date(), nullable=False),
    sa.Column('type_', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type_', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense_recurring_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['expense_categories.id'], ),
    sa.ForeignKeyConstraint(['id'], ['recurring_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['expense_categories.id'], ),
    sa.ForeignKeyConstraint(['id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('income_recurring_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['income_categories.id'], ),
    sa.ForeignKeyConstraint(['id'], ['recurring_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incomes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['income_categories.id'], ),
    sa.ForeignKeyConstraint(['id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('incomes')
    op.drop_table('income_recurring_transactions')
    op.drop_table('expenses')
    op.drop_table('expense_recurring_transactions')
    op.drop_table('transactions')
    op.drop_table('recurring_transactions')
    op.drop_table('income_categories')
    op.drop_table('expense_categories')
    op.drop_table('activation_tokens')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
